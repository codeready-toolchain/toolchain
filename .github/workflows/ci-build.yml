name: ci-build
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*.*'
  pull_request:
    branches:
      - master

jobs:
  test-with-coverage:
    name: Test with Coverage
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Test
      run: |
        make test-with-coverage

    - name: Upload code coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./out/coverage/coverage.txt
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

  golangci:
    name: GolangCI Lint
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.43.0
        skip-go-installation: true # we already installed Go with `actions/setup-go@v2` above
        skip-pkg-cache: true
        skip-build-cache: true
        args: --config=./.golangci.yml --verbose

#   sonarcloud:
#     name: SonarCloud
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#
#       - name: Test
#         run: |
#           make test-with-coverage
#
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         with:
#           files: ./out/coverage/coverage.txt
#           flags: unittests # optional
#           fail_ci_if_error: true # optional (default = false)
#           verbose: true # optional (default = false)
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        

